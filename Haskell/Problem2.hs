------------------------------------------------------------
-- Problem 2
--
-- Each new term in the Fibonacci sequence is generated by 
-- adding the previous two terms. By starting with 1 and 2, 
-- the first 10 terms will be:
--
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
-- By considering the terms in the Fibonacci sequence 
-- whose values do not exceed four million, find the sum of 
-- the even-valued terms.
------------------------------------------------------------
module Problem2 (problem2) where

------------------------------------------------------------
-- Enter the two first terms as arguments
------------------------------------------------------------
problem2 :: Integer -> Integer -> Integer
problem2 x y = problem2' xs x y
    where xs = [] ++ [x] ++ [y]

------------------------------------------------------------
-- Solution 1
------------------------------------------------------------
problem2' :: [Integer] -> Integer -> Integer -> Integer
problem2' [] _ _ = 0
problem2' xs x y
    | x > 4000000 = sum $ filter even xs
    | y > 4000000 = sum $ filter even xs
    | otherwise   = problem2' (xs ++ [x+y]) y (x+y)
    where x' = sum xs